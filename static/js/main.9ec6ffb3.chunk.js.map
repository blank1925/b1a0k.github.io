{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","status","current","winner","moves","map","step","move","desc","key","jumpTo","handleClick","slice","setState","concat","ReactDOM","render","document","getElementById"],"mappings":"yPAIA,SAASA,EAAOC,GACd,OACE,4BACEC,UAAU,SACVC,QAASF,EAAME,SACdF,EAAMG,OAKb,SAASC,EAAgBC,GAWvB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,K,IAGHG,E,2KAUSL,GAAI,IAAD,OACd,OAAQ,kBAACR,EAAD,CACNI,MAAOU,KAAKb,MAAMK,QAAQE,GAC1BL,QAAS,kBAAM,EAAKF,MAAME,QAAQK,Q,+BAKpC,OACE,6BACE,yBAAKN,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKb,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKb,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GAjCTC,IAAMC,WAwCpBC,E,kDAEJ,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXC,QAAS,CAAC,CACRd,QAASe,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,qDAWT,IAoBJC,EApBG,OACDL,EAAUN,KAAKK,MAAMC,QACrBM,EAAUN,EAAQN,KAAKK,MAAMI,YAC7BI,EAAStB,EAAgBqB,EAAQpB,SAEjCsB,EAAQR,EAAQS,KAAI,SAACC,EAAMC,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,wBAAIE,IAAKF,GACP,4BACE5B,QAAS,WAAQ,EAAK+B,OAAOH,KAE5BC,OAST,OAFYP,EAARE,EAAiB,WAAaA,EACpB,iBAAmBb,KAAKK,MAAMK,QAAU,IAAM,KAE1D,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACW,EAAD,CACEP,QAASoB,EAAQpB,QACjBH,QAAS,SAACK,GAAD,OAAO,EAAK2B,YAAY3B,OAGrC,yBAAKN,UAAU,aACb,6BAAMuB,GACN,4BAAKG,O,kCAMDpB,GACV,IAAMY,EAAUN,KAAKK,MAAMC,QAAQgB,MAAM,EAAGtB,KAAKK,MAAMI,WAAa,GAE9DjB,EADUc,EAAQA,EAAQX,OAAS,GACjBH,QAAQ8B,QAC5B/B,EAAgBC,IAAYA,EAAQE,IAGpCF,EAAQE,KACZF,EAAQE,GAAKM,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKuB,SAAS,CACZjB,QAASA,EAAQkB,OAAO,CAAC,CACvBhC,QAASA,KAEXiB,WAAYH,EAAQX,OACpBe,SAAUV,KAAKK,MAAMK,a,6BAIlBM,GACLhB,KAAKuB,SAAS,CACZd,WAAYO,EACZN,QAAUM,EAAO,IAAO,Q,GAzEXd,IAAMC,WAgFzBsB,IAASC,OACP,kBAACtB,EAAD,MACAuB,SAASC,eAAe,W","file":"static/js/main.9ec6ffb3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nclass Board extends React.Component {\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     squares: Array(9).fill(null),\n  //     xIsNext: true,\n  //   }\n  // }\n\n  renderSquare(i) {\n    return (<Square\n      value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}\n    />);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button\n            onClick={() => { this.jumpTo(move) }}\n          >\n            {desc}\n          </button>\n        </li>\n      )\n    })\n\n    let status;\n    if (winner) status = 'Winner: ' + winner;\n    else status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    if (squares[i]) return;\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    })\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 3) === 0,\n    })\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root'),\n  // () => {\n  //   console.log(1);\n  // }\n);\n\n"],"sourceRoot":""}